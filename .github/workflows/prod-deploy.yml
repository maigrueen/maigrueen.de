name: CI

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 1 * * *'  # every night at 1 (UTC) - bla bla bla comment because github disables everything after 60 days

jobs:
  build:
    runs-on: ubuntu-latest
    defaults: 
      run:
        shell: bash
        working-directory: ./maigrueen

    steps:
      - uses: actions/checkout@v3
      
      - name: Build Node.js for maigrueen Website
        uses: actions/setup-node@v3.5.1
        with:
          node-version: '16.x'
      #- run: npm install
      #- run: npm run build --if-present
      - id: 'auth'
        name: 'Authenticate to Google Cloud for Dashboard App'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_API }}

      - name: Build Go for Dashboard App
        uses: actions/setup-go@v3.3.1
        with: 
          go-version-file: './go.mod'
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
      - name: Run build for Dashboard
        working-directory: Dashboard
        run: go run .

#      - name: FTP Prod Deploy
#        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
#        with:
#          server: server45.webgo24.de
#          username: web6
#          password: ${{ secrets.PROD_FTP_PASSWORD }}
#          server-dir: /home/www/maigrueen.de/

      - name: Deploy GitHub Pages site
        uses: actions/deploy-pages@v4.0.5
        with:
        # GitHub token
        token: ${{ github.token }}
        # Time in milliseconds after which to timeout and cancel the deployment (default: 10 minutes)
        #timeout: # optional, default is 600000
        # Maximum number of status report errors before cancelling a deployment (default: 10)
        #error_count: # optional, default is 10
        # Time in milliseconds between two deployment status report (default: 5 seconds)
        #reporting_interval: # optional, default is 5000
        # Name of the artifact to deploy
        #artifact_name: # optional, default is github-pages
        # Is this attempting to deploy a pull request as a GitHub Pages preview site? (NOTE: This feature is only in alpha currently and is not available to the public!)
        #preview: # optional, default is false
              
          
